import React from 'react';
import { X, Code, Copy, Check } from 'lucide-react';

interface FunctionViewModalProps {
  isOpen: boolean;
  onClose: () => void;
  title: string;
  functionCode: string;
  description?: string;
  isCustom?: boolean;
}

export function FunctionViewModal({ 
  isOpen, 
  onClose, 
  title, 
  functionCode, 
  description,
  isCustom = false 
}: FunctionViewModalProps) {
  const [copied, setCopied] = React.useState(false);

  if (!isOpen) return null;

  const handleCopy = async () => {
    try {
      await navigator.clipboard.writeText(functionCode);
      setCopied(true);
      setTimeout(() => setCopied(false), 2000);
    } catch (error) {
      console.error('Failed to copy to clipboard:', error);
    }
  };

  return (
    <div className="fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4">
      <div className="bg-white dark:bg-gray-800 rounded-xl shadow-2xl w-full max-w-4xl max-h-[90vh] overflow-y-auto premium-scrollbar animate-scale-in">
        {/* Header */}
        <div className="flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-700">
          <div className="flex items-center space-x-3">
            <div className="p-2 bg-purple-100 dark:bg-purple-900/20 rounded-lg">
              <Code className="w-6 h-6 text-purple-600 dark:text-purple-400" />
            </div>
            <div>
              <h2 className="text-xl font-semibold text-gray-900 dark:text-white">
                {title} - Detection Function
              </h2>
              <p className="text-sm text-gray-500 dark:text-gray-400">
                {isCustom ? 'AI-Generated Custom Analysis Function' : 'Built-in Security Detection Function'}
              </p>
            </div>
          </div>
          
          <div className="flex items-center space-x-2">
            <button
              onClick={handleCopy}
              className="flex items-center space-x-1 px-3 py-1 text-sm bg-gray-600 hover:bg-gray-700 text-white rounded-lg transition-colors"
            >
              {copied ? <Check className="w-4 h-4" /> : <Copy className="w-4 h-4" />}
              <span>{copied ? 'Copied!' : 'Copy'}</span>
            </button>
            <button
              onClick={onClose}
              className="p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors"
            >
              <X className="w-5 h-5" />
            </button>
          </div>
        </div>

        {/* Description */}
        {description && (
          <div className="p-6 border-b border-gray-200 dark:border-gray-700 bg-gray-50 dark:bg-gray-700">
            <h3 className="text-sm font-medium text-gray-900 dark:text-white mb-2">Description</h3>
            <p className="text-sm text-gray-600 dark:text-gray-300">{description}</p>
          </div>
        )}

        {/* Function Code */}
        <div className="flex-1">
          <div className="p-6">
            <div className="bg-gray-900 dark:bg-gray-950 rounded-lg overflow-hidden">
              <div className="flex items-center justify-between px-4 py-2 bg-gray-800 dark:bg-gray-900 border-b border-gray-700">
                <span className="text-sm font-medium text-gray-300">
                  {isCustom ? 'Generated JavaScript Function' : 'TypeScript Detection Function'}
                </span>
                <span className="text-xs text-gray-400">
                  {functionCode.split('\n').length} lines
                </span>
              </div>
              <pre className="p-4 text-sm font-mono text-gray-100 overflow-x-auto whitespace-pre-wrap max-h-96 overflow-y-auto premium-scrollbar">
                <code>{functionCode}</code>
              </pre>
            </div>
          </div>
        </div>

        {/* Footer */}
        <div className="p-6 border-t border-gray-200 dark:border-gray-700 bg-gray-50 dark:bg-gray-700">
          <div className="flex items-center justify-between">
            <div className="text-sm text-gray-600 dark:text-gray-300">
              {isCustom ? (
                <span>This function was generated by AI based on your custom analysis requirements.</span>
              ) : (
                <span>This is a built-in detection function that analyzes log entries for security threats.</span>
              )}
            </div>
            <button
              onClick={onClose}
              className="px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white rounded-lg transition-colors"
            >
              Close
            </button>
          </div>
        </div>
      </div>
    </div>
  );
}